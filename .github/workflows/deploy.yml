name: Medusa CD Pipeline

on:
  push:
    branches: [main]

env:
  AWS_REGION: "us-east-1"
  ECR_REPO: "medusa-app"
  ECS_CLUSTER: "medusa-cluster"
  ECS_SERVICE: "medusa-service"
  DB_NAME: "medusa"
  DB_USER: "medusa_admin"

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v4

    # Add Docker layer caching (faster builds)
    - uses: docker/setup-buildx-action@v2

    - uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - uses: aws-actions/amazon-ecr-login@v2
      id: ecr-login

    - name: Build and Push
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker buildx build \
          --platform linux/amd64 \
          -t $ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG \
          --push .
        echo "image_uri=$ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false

    - run: terraform init -input=false
      working-directory: ./terraform

    - run: terraform validate
      working-directory: ./terraform

    - run: terraform apply -auto-approve -input=false
      working-directory: ./terraform
      env:
        TF_VAR_image_uri: ${{ steps.build-image.outputs.image_uri }}
        TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}